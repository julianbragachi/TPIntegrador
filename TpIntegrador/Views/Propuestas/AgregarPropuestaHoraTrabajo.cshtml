@model AyudandoAlProjimo.Data.ViewModels.AgregarPropuestaHoraTrabajoViewModel
@{
    Layout = "~/Views/Shared/PropuestasLayout.cshtml";
    ViewBag.Title = "Nueva propuesta";
}

@using (Html.BeginForm("AgregarPropuestaHoraTrabajo", "Propuestas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container">
        @if (ViewBag.Error != null)
        {
            <div class="card red">
                <div class="card-content white-text">
                    @if (ViewBag.Error == AyudandoAlProjimo.Data.ErrorCodeAddProposalEnum.InvalidProfile)
                    {
                        <p>Aún no tienes completado todos los datos en tu perfil, haz click aqui para completarlos. @Html.ActionLink("Mi Perfil", "", "", null, new { @class = "white-text waves-effect waves-teal btn-flat" })</p>
                    }

                    @if (ViewBag.Error == AyudandoAlProjimo.Data.ErrorCodeAddProposalEnum.InvalidProposalCount)
                    {
                        <p>Actualmente tiene mas de 3 propuestas activas</p>
                    }
                </div>
            </div>
        }
        <div class="card">
            <div class="card-content">
                <div class="row">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">account_circle</i>
                        @Html.EditorFor(x => x.Nombre, new { htmlAttributes = new { @class = "validate", @id = "namePropuesta", @required = true } })
                        <label for="namePropuesta">Nombre de la propuesta</label>
                        @Html.ValidationMessageFor(x => x.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col s12">
                        <i class="material-icons prefix">edit</i>
                        @Html.TextAreaFor(x => x.Descripcion, new { @class = "validate materialize-textarea", @id = "description", @required = true })
                        <label for="description">Descripcion</label>
                        @Html.ValidationMessageFor(x => x.Descripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col s6">
                        <i class="material-icons prefix">date_range</i>
                        @Html.EditorFor(x => x.FechaFin, new { htmlAttributes = new { @class = "validate", @id = "endDate", @required = true } })
                        <label for="endDate" class="active">Fecha fin (dd/mm/aaaa)</label>
                        @Html.ValidationMessageFor(x => x.FechaFin, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col s6">
                        <i class="material-icons prefix">phone</i>
                        @Html.EditorFor(x => x.TelefonoContacto, new { htmlAttributes = new { @class = "validate", @id = "phone", @required = true } })
                        <label for="phone">Telefono de contacto</label>
                        @Html.ValidationMessageFor(x => x.TelefonoContacto, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col s6">
                        <i class="material-icons prefix">timer</i>
                        @Html.EditorFor(x => x.CantidadHoras, new { htmlAttributes = new { @class = "validate", @id = "hourstime" } })
                        <label for="hourstime">Cantidad de horas</label>
                    </div>

                    <div class="input-field col s6">
                        <i class="material-icons prefix">wc</i>
                        @Html.DropDownListFor(x => x.Profesion,
                            new SelectList(new[] {
                                new { ID = "Albañil", Name = "Albañil" },
                                new { ID = "Plomero, Name = "Plomero" },
                                new { ID = "Electricista", Name = "Electricista" },
                                new { ID = "Abogado", Name = "Abogado" },
                                new { ID = "Contador", Name = "Contador" },
                                new { ID = "Trabajador Social", Name = "Trabajador Social" },
                                new { ID = "Psicologa", Name = "Psicologa" },
                                new { ID = "Psicopedagoga", Name = "Psicopedagoga" },
                                new { ID = "Cocinero", Name = "Cocinero" },
                                new { ID = "Otro", Name = "Otro" },
                            }, "ID", "Name", 1)
                            , new { @class = "with-gap", @id = "DonationType" })
                        <label for="moneyDestination">Profesion</label>
                    </div>


                    @for (int i = 0; i < 2; i++)
                    {
                        <div class="input-field col s6">
                            <i class="material-icons prefix">account_circle</i>
                            @Html.EditorFor(x => x.Referencias[i].Nombre, new { htmlAttributes = new { @class = "validate", @id = "namePropuesta", @required = true } })
                            <label for="namePropuesta">Nombre del referente</label>
                            @Html.ValidationMessageFor(x => x.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="input-field col s6">
                            <i class="material-icons prefix">phone</i>
                            @Html.EditorFor(x => x.Referencias[i].Telefono, new { htmlAttributes = new { @class = "validate", @id = "photo", @required = true } })
                            <label for="photo">Telefono del referente</label>
                            @Html.ValidationMessageFor(x => x.TelefonoContacto, "", new { @class = "text-danger" })
                        </div>
                    }

                    <input type="file" name="Foto" accept="image/*" />
                    <p>
                        @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
                    </p>

                </div>

                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Enviar
                    <i class="material-icons right">send</i>
                </button>


            </div>
        </div>
    </div>
}