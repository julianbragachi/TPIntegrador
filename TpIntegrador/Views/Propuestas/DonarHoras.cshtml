@model AyudandoAlProjimo.Data.ViewModels.RealizarDonacionHorasViewModel
@{
    Layout = "~/Views/Shared/PropuestasLayout.cshtml";
    ViewBag.Title = "Donar horas";
}

<div class="container">
    <div class="card margin-top-bottom-50">
        <div class="card-content">
            <div class="row no-margin">
                <h2 class="title-propuesta no-margin">Donación para @Model.Propuesta.Nombre</h2>

                <p class="title-recaudado margin-bottom-20">
                    Profesion necesitada: <strong>@Model.Propuesta.PropuestasDonacionesHorasTrabajo.FirstOrDefault().Profesion</strong>
                </p>

                <div class="margin-bottom-20">
                    <ul class="tabla-objetivos">
                        <li>
                            <p>
                                <strong>@(Model.Propuesta.PropuestasDonacionesHorasTrabajo.Count > 0 ? Model.Propuesta.PropuestasDonacionesHorasTrabajo.FirstOrDefault().CantidadHoras : 0)</strong>
                            </p>
                            <span class="info-text">Objetivo (Horas)</span>
                        </li>
                        <li>
                            <p>
                                <strong>@(Model.Propuesta.PropuestasDonacionesHorasTrabajo.Count > 0 ? Model.Propuesta.PropuestasDonacionesHorasTrabajo.FirstOrDefault().DonacionesHorasTrabajo.Sum(x => x.Cantidad) : 0)</strong>
                            </p>
                            <span class="info-text">Recaudado</span>
                        </li>
                        <li>
                            <p><strong>@(Math.Round((Model.Propuesta.FechaFin - DateTime.Now).TotalDays))</strong></p>
                            <span class="info-text">Días restantes</span>
                        </li>
                    </ul>
                </div>

                @using (Html.BeginForm())
                {
                    <div class="row margin-bottom-20">
                        <div class="input-field col s6">
                            <i class="material-icons prefix">wc</i>
                            @Html.DropDownListFor(x => x.Formulario.Profesion,
                                new SelectList(new[] {
                                    new { ID = "1", Name = "Albañil" },
                                    new { ID = "2", Name = "Plomero" },
                                    new { ID = "3", Name = "Electricista" },
                                    new { ID = "4", Name = "Abogado" },
                                    new { ID = "5", Name = "Contador" },
                                    new { ID = "6", Name = "Trabajador Social" },
                                    new { ID = "7", Name = "Psicologa" },
                                    new { ID = "8", Name = "Psicopedagoga" },
                                    new { ID = "9", Name = "Cocinero" },
                                    new { ID = "10", Name = "Otro" },
                                }, "ID", "Name", 1)
                                , new { @class = "with-gap", @id = "DonationType" })
                            <label for="moneyDestination">Profesion</label>
                        </div>

                        <div class="input-field col s6">
                            <i class="material-icons prefix">timer</i>
                            @Html.EditorFor(x => x.Formulario.Cantidad, new { htmlAttributes = new { @class = "validate", @id = "hourstime" } })
                            <label for="hourstime">Cantidad de horas</label>
                            @Html.ValidationMessageFor(model => model.Formulario.Cantidad, "", new { @class = "text-danger" })
                        </div>

                        <div class="right">
                            <button class="btn waves-effect waves-light" type="submit" name="action">Enviar<i class="material-icons right">edit</i></button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>